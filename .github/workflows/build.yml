name: Build

on:
  push:
  workflow_dispatch:

env:
  MOUNT_POINT: /home/$USER/ue
  WEBDAV_URL: https://stack.technicjelle.com/remote.php/webdav

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install davfs2
        run: sudo apt install davfs2
      - name: Add user to davfs2 group
        run: sudo usermod -aG davfs2 $USER
      - name: Create directory for mount
        run: |
          sudo mkdir -m 700 ${{ env.MOUNT_POINT }}
          sudo chown $USER:$USER ${{ env.MOUNT_POINT }}
      - name: Add webdav to fstab
        run: echo "${{ env.WEBDAV_URL }} ${{ env.MOUNT_POINT }} davfs rw,user,uid=$USER,noauto 0 0" | sudo tee -a /etc/fstab
      - name: Set up davfs2 secrets files
        run: |
          sudo mkdir -m 755 /home/$USER/.davfs2
          sudo cp /etc/davfs2/secrets /home/$USER/.davfs2
          sudo chown -R $USER:$USER /home/$USER/.davfs2
      - name: Add webdav credentials to secrets file
        env:
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
        run: echo "${{ env.WEBDAV_URL }} $WEBDAV_USER $WEBDAV_PASS" | sudo tee -a /home/$USER/.davfs2/secrets
      - name: Mount UE 5.4.4 install from a network drive
        run: mount ${{ env.MOUNT_POINT }}
      - name: List files in UE directory
        run: ls ${{ env.MOUNT_POINT }}
      - name: Create directory for staging files
        run: mkdir ./staging/
      - name: chmod the RunUAT script
        run: chmod +x ${{ env.MOUNT_POINT }}/Engine/Build/BatchFiles/RunUAT.sh
      - name: Run UE5 build
        run: >
          ${{ env.MOUNT_POINT }}/Engine/Build/BatchFiles/RunUAT.sh -ScriptsForProject="$PWD/UE5_GHAction_VRTempl.uproject"
          BuildCookRun -project="$PWD/UE5_GHAction_VRTempl.uproject" -noP4
          -clientconfig=Shipping -serverconfig=Shipping -nocompile -nocompileeditor -installed
          -unrealexe="${{ env.MOUNT_POINT }}/Engine/Binaries/Linux/UnrealEditor-Cmd" -utf8output
          -platform=Linux -build -cook
          -allmaps -CookCultures=en -unversionedcookedcontent -pak -stage
          -stagingdirectory="$PWD/staging/"
